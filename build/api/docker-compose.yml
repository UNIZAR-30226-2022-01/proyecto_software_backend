version: '3.0'
services:
  # Servicio de base de datos de postgres
  postgres:
    image: postgres:latest
    # Usa el volumen previamente creado, y ejecuta el archivo ddl.sql local en el inicio de la base de datos
    volumes: 
        - volumen-postgres:/var/lib/postgresql/data
        - ../../modelo/ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
#        - ../../modelo/ddl_ataque.sql:/docker-entrypoint-initdb.d/inserts.sql
#        - ../../modelo/ddl_refuerzo.sql:/docker-entrypoint-initdb.d/inserts.sql
#        - ../../modelo/ddl_fortificacion.sql:/docker-entrypoint-initdb.d/inserts.sql
#        - ../../modelo/ddl_debug.sql:/docker-entrypoint-initdb.d/inserts.sql
    # Fichero con variables de entorno (usuario/pw)
    env_file:
        - postgres.env
    # Puertos a abrir al exterior/otros contenedores
    ports:
     - 5432:5432
  # Servicio para el backend
  backend:
    # Ejecuta el DockerFile local
    build: .
    # Abre el puerto 8090 al exterior (80 en producción)
    ports:
     - 8090:8090
    # Espera a que el contenedor de la base de datos indique que esté en marcha
    depends_on:
     - postgres
    env_file:
     - servidor.env
     - mail.env
# Declaraciones de volúmenes a usar
volumes:
    volumen-postgres:
